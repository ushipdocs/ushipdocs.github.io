{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "uShip API"
  },
  "host": "apidev.uship.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v2/listings/{listingId}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves a listing from the uShip Marketplace by listingId",
        "operationId": "Listings_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "description": "listingId of the listing that is to be returned",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListingModel"
            }
          }
        }
      }
    },
    "/v2/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "operationId": "Listings_GetAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userType",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "status.items",
            "in": "query",
            "description": "Gets or sets the items.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "transitStatus.items",
            "in": "query",
            "description": "Gets or sets the items.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListingCollectionItemModelCollectionResult"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Listings"
        ],
        "operationId": "Listings_PostAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostListingModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/v2/listings/{listingId}/images": {
      "post": {
        "tags": [
          "ListingsImages"
        ],
        "operationId": "ListingsImages_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostListingImageModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/oauth/token_authenticated": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "scope",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "refresh_token",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "code",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "scope",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "refresh_token",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "code",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ListingModel": {
      "required": [
        "namedPrice",
        "listingId",
        "title",
        "links"
      ],
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/EnumModel"
        },
        "paymentStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "transitStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "cancellationStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "hasPendingBookingRequest": {
          "type": "boolean"
        },
        "gallery": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCharitable": {
          "type": "boolean"
        },
        "isAuction": {
          "type": "boolean"
        },
        "isDutchAuction": {
          "type": "boolean"
        },
        "autoAcceptPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "auctionTargetPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "auctionMaxPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "namedPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "offerPrice": {
          "$ref": "#/definitions/OfferPriceModel"
        },
        "lowestBidPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "acceptedBidPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "totalCost": {
          "$ref": "#/definitions/PriceModel"
        },
        "bookingDeposit": {
          "$ref": "#/definitions/PriceModel"
        },
        "amountDueToServiceProvider": {
          "$ref": "#/definitions/PriceModel"
        },
        "amountToMe": {
          "$ref": "#/definitions/PriceModel"
        },
        "priceDetails": {
          "$ref": "#/definitions/PriceDetailsModel"
        },
        "commodity": {
          "type": "string"
        },
        "parentCommodity": {
          "type": "string"
        },
        "topLevelCommodity": {
          "type": "string"
        },
        "expiresOn": {
          "format": "date-time",
          "type": "string"
        },
        "questionsAsked": {
          "format": "int32",
          "type": "integer"
        },
        "activeBidsPlaced": {
          "format": "int32",
          "type": "integer"
        },
        "totalBidsPlaced": {
          "format": "int32",
          "type": "integer"
        },
        "imageUrl": {
          "type": "string"
        },
        "isDefaultImage": {
          "type": "boolean"
        },
        "checksum": {
          "type": "string"
        },
        "isWatched": {
          "type": "boolean"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "activatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "isBrokered": {
          "type": "boolean"
        },
        "bookedOn": {
          "format": "date-time",
          "type": "string"
        },
        "completedOn": {
          "format": "date-time",
          "type": "string"
        },
        "cancelledOn": {
          "format": "date-time",
          "type": "string"
        },
        "archivedOn": {
          "format": "date-time",
          "type": "string"
        },
        "serviceProvider": {
          "$ref": "#/definitions/UserSummaryModel"
        },
        "assignedDriver": {
          "$ref": "#/definitions/UserSummaryModel"
        },
        "isReadyForPickup": {
          "type": "boolean"
        },
        "billOfLadingNumber": {
          "format": "int32",
          "type": "integer"
        },
        "uShipPayments": {
          "$ref": "#/definitions/ListingUshipPaymentsModel",
          "description": "Present only when the user can bid on the listing and is eligible \r\nfor uShip payments"
        },
        "minimumBidAmount": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the minimum amount for which a bid can be placed"
        },
        "privateNetwork": {
          "type": "string"
        },
        "cancellationLink": {
          "description": "A link to the cancellation process web page",
          "type": "string"
        },
        "quoteRequestId": {
          "description": "ID that was used for quote request (only for published rates)",
          "type": "string"
        },
        "commodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "parentCommodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "topLevelCommodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "isItineraryMandatory": {
          "type": "boolean"
        },
        "thirdParty": {
          "$ref": "#/definitions/ThirdParty"
        },
        "serviceTypes": {
          "description": "required services for this Shipment's cargo (e.g., blanket wrapping\r\nis required)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "isExclusiveListing": {
          "description": "A flag to indicate whether or not a listing is exclusive to any network",
          "type": "boolean"
        },
        "isProofOfDeliveryRequired": {
          "type": "boolean"
        },
        "listingId": {
          "format": "int32",
          "description": "unique, public, numeric identifier of this Shipment",
          "type": "integer"
        },
        "title": {
          "description": "free text, ASCII, maximum of 50 characters",
          "type": "string"
        },
        "description": {
          "description": "free text, ASCII; maximum of 5000 characters\r\nmay be empty or absent if none was specified",
          "type": "string"
        },
        "route": {
          "$ref": "#/definitions/RouteModel",
          "description": "pickup and dropoff locations and time windows"
        },
        "lister": {
          "$ref": "#/definitions/UserSummaryModel",
          "description": "brief description of the user who created this Shipment"
        },
        "items": {
          "description": "details of the cargo(s) to be transported",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListingItemModel"
          }
        },
        "accessorials": {
          "description": "accessorials required by the Shipper; e.g., the cargo must not be \r\nallowed to freeze",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "totalWeightInGrams": {
          "$ref": "#/definitions/TotalWeightInGramsModel",
          "description": "the sum of of the weights of all items in this Shipment"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FormattedAttributeModel"
          }
        },
        "nextTransitStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "previousTransitStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "availableTransitStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "referenceNumbers": {
          "description": "These are identifiers and numbers by which refer to this Shipment \r\nor its cargo in some external system.  If this Shipment is \"owned\"\r\nby an external system, prefer the ThirdParty property, as those\r\nfields are searchable and affect some uShip behavior.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceNumber"
          }
        },
        "importSource": {
          "type": "string"
        },
        "links": {
          "description": "The resource's links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "EnumModel": {
      "description": "Details of an enum that can be translated",
      "type": "object",
      "properties": {
        "value": {
          "description": "This is a stable value suitable for use in logic.",
          "type": "string"
        },
        "label": {
          "description": "This is the full, localized, human-readable form of the value.\r\nThis is a more verbose version of the ShortLabel.\r\nThis value should never be used for logic or decisions, because \r\nthe translated values could be modified\r\nat any time in order to clarify meaning, and as a result of a\r\nmore specific (e.g., idiomatically correct) translation being\r\nintroduced for users with a specific language preference.",
          "type": "string"
        },
        "shortLabel": {
          "description": "This is the shortened, localized, human-readable form of the value.\r\nThis is a more terse version of the label.\r\nThis value should never be used for logic or decisions, because the \r\ntranslated values could be modified at any time\r\nin order to clarify meaning, and as a result of a\r\nmore specific (e.g., idiomatically correct) translation being\r\nintroduced for users with a specific language preference.",
          "type": "string"
        }
      }
    },
    "PriceModel": {
      "description": "The details of a price and recommended formatting",
      "required": [
        "value",
        "currencyType"
      ],
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Raw value of the price",
          "type": "number"
        },
        "label": {
          "description": "Suggested formatted representation",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        },
        "currencyType": {
          "$ref": "#/definitions/EnumModel",
          "description": "The currency to interpret the value as"
        }
      }
    },
    "PriceDetailsModel": {
      "description": "An aggregate of line items of a transaction",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceDetailsItem"
          }
        }
      }
    },
    "PriceDetailsItem": {
      "description": "A single line item of a transction",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/PriceModel"
        },
        "description": {
          "$ref": "#/definitions/EnumModel"
        }
      }
    },
    "OfferPriceModel": {
      "description": "The details of an offer",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "offerType": {
          "$ref": "#/definitions/EnumModel",
          "description": "The type of the offer"
        },
        "value": {
          "format": "double",
          "description": "Raw value of the price",
          "type": "number"
        },
        "label": {
          "description": "Suggested formatted representation",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        },
        "currencyType": {
          "$ref": "#/definitions/EnumModel",
          "description": "The currency to interpret the value as"
        }
      }
    },
    "UserSummaryModel": {
      "description": "Public representation of a user",
      "required": [
        "userId",
        "isNetworkAware",
        "links"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "format": "int32",
          "description": "Generated Id",
          "type": "integer"
        },
        "displayName": {
          "description": "Short name",
          "type": "string"
        },
        "imageUrl": {
          "description": "Public profile image",
          "type": "string"
        },
        "profileUrl": {
          "description": "Public profile URL",
          "type": "string"
        },
        "responseTime": {
          "description": "Average response time",
          "type": "string"
        },
        "feedback": {
          "$ref": "#/definitions/FeedbackSummaryModel",
          "description": "Feedback summary"
        },
        "trackingEnabled": {
          "description": "Tracking status of user",
          "type": "boolean"
        },
        "aboutMe": {
          "description": "User description",
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "description": "Date joined uship.com",
          "type": "string"
        },
        "thirdPartyIdentifier": {
          "description": "An identifer (email/integer/other) which can uniquely identify this user, set externally",
          "type": "string"
        },
        "thirdPartyProfileLink": {
          "description": "A link to a page with information about this user on a different site",
          "type": "string"
        },
        "onTimePercentage": {
          "format": "double",
          "description": "Calculated percentage of on time shipments shipped by this user",
          "type": "number"
        },
        "rebillPercentage": {
          "format": "double",
          "description": "Calculated percentage of rebills on shipments shipped by this user",
          "type": "number"
        },
        "damageToClaimRatio": {
          "format": "double",
          "description": "Calculated amount of damage amount/claim amount on shipments shipped by this user",
          "type": "number"
        },
        "pickupInstructionsMaxCharacters": {
          "format": "int32",
          "description": "Maximum number of pickup instruction characters supported for shipments shipped by this user",
          "type": "integer"
        },
        "tariffUrl": {
          "description": "URL that points to this user's tariff (terms and conditions) information",
          "type": "string"
        },
        "isFreightConsolidator": {
          "description": "A flag indicating whether or not a user is an LTL carrier providing consolidated shipments",
          "type": "boolean"
        },
        "isNetworkAware": {
          "description": "True if carrier has ever been added to a network",
          "type": "boolean"
        },
        "customFields": {
          "description": "Variable customer fields",
          "type": "object"
        },
        "companyLocation": {
          "$ref": "#/definitions/AddressLocation",
          "description": "Major Municipality and State/Provence location information"
        },
        "directoryCategories": {
          "description": "Top level commodity categories selected by the user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommodityModel"
          }
        },
        "links": {
          "description": "The resource's links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "FeedbackSummaryModel": {
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "The number of feedback items left",
          "type": "integer"
        },
        "percentPositive": {
          "format": "double",
          "description": "The percent of feedback that the user has recieved that is \r\npositive.  If the user has received no feedback, the value is -1.\r\nIf the user has received only negative feedback, the value is 0,\r\nand it is omitted from the serialized object.",
          "type": "number"
        },
        "starRating": {
          "format": "double",
          "description": "Rating that determines how many \"stars\" the user's profile has",
          "type": "number"
        },
        "acceptanceRate": {
          "format": "double",
          "description": "The ratio of accepted bids versus total bids",
          "type": "number"
        }
      }
    },
    "Link": {
      "description": "A base class for relation links",
      "type": "object",
      "properties": {
        "rel": {
          "description": "The relationship between the current resource and the linked resource",
          "type": "string"
        },
        "verb": {
          "description": "GET, PUT, POST, DELETE, HEAD",
          "type": "string"
        },
        "href": {
          "description": "The URI of the resource(s)",
          "type": "string"
        },
        "title": {
          "description": "The name of the resource; theoretically, this should be the root name of the controller",
          "type": "string"
        }
      }
    },
    "AddressLocation": {
      "description": "Output model for general address location",
      "type": "object",
      "properties": {
        "majorMunicipality": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        }
      }
    },
    "CommodityModel": {
      "description": "A class of things that can be transported",
      "type": "object",
      "properties": {
        "value": {
          "description": "The code assigned to this class of transportable objects",
          "type": "string"
        },
        "label": {
          "description": "The human-readable, localized name of the class of objects",
          "type": "string"
        },
        "shortLabel": {
          "type": "string"
        },
        "subCommodities": {
          "description": "Sub-types of this class of objects; i.e., further specialized \r\ndescriptions of the commodity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommodityModel"
          }
        }
      }
    },
    "ReferenceNumber": {
      "required": [
        "number",
        "type"
      ],
      "type": "object",
      "properties": {
        "number": {
          "maxLength": 60,
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EnumModel"
        },
        "referenceNumberLabel": {
          "type": "string"
        }
      }
    },
    "TotalWeightInGramsModel": {
      "description": "Weight of an item in grams",
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "Raw weight in grams",
          "type": "number"
        },
        "label": {
          "description": "Formatted representation of grams",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        }
      }
    },
    "ListingItemModel": {
      "type": "object",
      "properties": {
        "title": {
          "description": "free text, ASCII, maximum of 1000 characters",
          "type": "string"
        },
        "commodity": {
          "$ref": "#/definitions/EnumModel",
          "description": "the single type of cargo in this item; e.g., appliances"
        },
        "gallery": {
          "description": "URIs of images of this item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "description": "attributes/properties specific to this type of cargo;\r\nthat is, the keys in this item vary depending on the\r\nCommodity field",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FormattedAttributeModel"
          }
        }
      }
    },
    "RouteModel": {
      "description": "Container for route destinations and other route information",
      "type": "object",
      "properties": {
        "distance": {
          "$ref": "#/definitions/DistanceModel",
          "description": "Total distance"
        },
        "items": {
          "description": "Ordered list of route destinations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutePointModel"
          }
        }
      }
    },
    "DistanceModel": {
      "description": "Measurement of a large value used for distance",
      "type": "object",
      "properties": {
        "kilometers": {
          "format": "double",
          "description": "Raw distance in kilometers",
          "type": "number"
        },
        "label": {
          "description": "Suggested formatted representation",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        }
      }
    },
    "RoutePointModel": {
      "description": "A single destination of a route",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressModel",
          "description": "the address of the pickup/dropoff location"
        },
        "contact": {
          "$ref": "#/definitions/RoutePointContactModel",
          "description": "contract information for the representative(s) responsible for this\r\npickup/dropoff event"
        },
        "timeFrame": {
          "$ref": "#/definitions/TimeFrameModel",
          "description": "required arrival time window"
        },
        "terminal": {
          "$ref": "#/definitions/TerminalModel"
        },
        "attributes": {
          "description": "Attributes associated with a single destination",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FormattedAttributeModel"
          }
        },
        "accessorials": {
          "description": "Collection of service accessorials for this route point",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        }
      }
    },
    "RoutePointContactModel": {
      "description": "Shipper contact information for the route point",
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 50,
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "phoneNumber": {
          "maxLength": 20,
          "type": "string"
        },
        "altPhoneNumber": {
          "maxLength": 20,
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "TimeFrameModel": {
      "description": "The details of a time frame and recommended display",
      "required": [
        "localEarliestArrival",
        "localLatestArrival"
      ],
      "type": "object",
      "properties": {
        "label": {
          "description": "Suggested formatted representation",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        },
        "earliestArrival": {
          "format": "date-time",
          "description": "Earliest range for arrival for pickup or dropoff",
          "type": "string"
        },
        "latestArrival": {
          "format": "date-time",
          "description": "Latest range for arrival for pickup or dropoff",
          "type": "string"
        },
        "localEarliestArrival": {
          "format": "date-time",
          "description": "Earliest range for arrival for pickup or dropoff with Timezone offset",
          "type": "string"
        },
        "localLatestArrival": {
          "format": "date-time",
          "description": "Latest range for arrival for pickup or dropoff with Timezone offset",
          "type": "string"
        },
        "timeFrameType": {
          "$ref": "#/definitions/EnumModel",
          "description": "{uShip.Enums.ListingTimeFrameType}"
        },
        "timeZone": {
          "description": "Specifies the Time Zone in the \r\nZone Info (Olson, TzIdentifier) format",
          "type": "string"
        }
      }
    },
    "TerminalModel": {
      "description": "A model for freight terminals",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "The phone number for the terminal",
          "type": "string"
        },
        "city": {
          "description": "The city the terminal is located in",
          "type": "string"
        },
        "state": {
          "description": "The state the terminal is located in",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code of the terminal",
          "type": "string"
        }
      }
    },
    "FormattedAttributeModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "label": {
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        }
      }
    },
    "ListingUshipPaymentsModel": {
      "type": "object",
      "properties": {
        "requiredOnBidsLessThan": {
          "$ref": "#/definitions/PriceModel",
          "description": "uShip Payments must be used for bids less than or equal to this \r\nprice"
        },
        "availableOnBidsLessThan": {
          "$ref": "#/definitions/PriceModel",
          "description": "uShip Payments may be used for bids less than or equal to this\r\nprice"
        }
      }
    },
    "ThirdParty": {
      "description": "Some Listings created in uShip are the direct result of data in some\r\nexternal system.  For example, a Shipper may have their own TMS, which\r\ncontains the authoritative, definitive information the cargo, \r\ntimeframe, pickup, and dropoff associated with a uShip Shipment or\r\nListing.  This object stores specifies the provenance, identity, and \r\nrevision/change information of a uShip Shipment or Listing created\r\nfrom such an external source.",
      "required": [
        "identifier",
        "version",
        "checksum",
        "source"
      ],
      "type": "object",
      "properties": {
        "identifier": {
          "description": "canonical identifier of this Listing's most direct counterpart \r\nin an external system; can be used to find this Listing in uShip",
          "maxLength": 200,
          "type": "string"
        },
        "version": {
          "description": "version of this Listing's most direct counterpart in the external \r\nsystem; can be used for optimistic concurrency control via the \r\nPUT /v3/markets/:marketId/listings/:listingId endpoint",
          "maxLength": 255,
          "type": "string"
        },
        "checksum": {
          "description": "The content checksum of this Listing's most direct counterpart \r\nin the external system; no logic in the uShip system interacts \r\nwith this value.  Its meaning is known only to API clients.",
          "maxLength": 255,
          "type": "string"
        },
        "source": {
          "description": "system of record for the Shipment and Itinerary data in this \r\nListing; for example, the planning or TMS software from whence \r\nhis data originates",
          "maxLength": 200,
          "type": "string"
        }
      }
    },
    "ListingCollectionItemModelCollectionResult": {
      "description": "A collection of multiple items retrieved from a single API resource",
      "type": "object",
      "properties": {
        "totalCount": {
          "format": "int32",
          "description": "The total count of items that exist for the resource requested",
          "type": "integer"
        },
        "items": {
          "description": "The paged collection of items as requested",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListingCollectionItemModel"
          }
        }
      }
    },
    "ListingCollectionItemModel": {
      "required": [
        "namedPrice",
        "links"
      ],
      "type": "object",
      "properties": {
        "acceptedBidPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "lister": {
          "$ref": "#/definitions/UserSummaryModel"
        },
        "assignedDriver": {
          "$ref": "#/definitions/UserSummaryModel"
        },
        "status": {
          "$ref": "#/definitions/EnumModel"
        },
        "paymentStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "transitStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "cancellationStatus": {
          "$ref": "#/definitions/EnumModel"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "bookedOn": {
          "format": "date-time",
          "type": "string"
        },
        "completedOn": {
          "format": "date-time",
          "type": "string"
        },
        "cancelledOn": {
          "format": "date-time",
          "type": "string"
        },
        "archivedOn": {
          "format": "date-time",
          "type": "string"
        },
        "transitStatusActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "amountDueToServiceProvider": {
          "$ref": "#/definitions/PriceModel"
        },
        "amountToMe": {
          "$ref": "#/definitions/PriceModel"
        },
        "priceDetails": {
          "$ref": "#/definitions/PriceDetailsModel"
        },
        "isAutobookingListing": {
          "type": "boolean"
        },
        "listingId": {
          "format": "int32",
          "description": "Gets or sets the listing id.",
          "type": "integer"
        },
        "title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "imageUrl": {
          "description": "Gets or sets the image URL.",
          "type": "string"
        },
        "isDefaultImage": {
          "description": "Determines whether the ImageUrl is a URL to a default commodity image.",
          "type": "boolean"
        },
        "route": {
          "$ref": "#/definitions/RouteModel",
          "description": "Gets or sets the route."
        },
        "expiresOn": {
          "format": "date-time",
          "description": "Gets or sets the expires on.",
          "type": "string"
        },
        "commodity": {
          "description": "Gets or sets the commodity.",
          "type": "string"
        },
        "parentCommodity": {
          "description": "Gets or sets the parent commodity.",
          "type": "string"
        },
        "topLevelCommodity": {
          "description": "Gets or sets the top level commodity.",
          "type": "string"
        },
        "activeBidsPlaced": {
          "format": "int32",
          "description": "Gets or sets the number of active bids.",
          "type": "integer"
        },
        "totalBidsPlaced": {
          "format": "int32",
          "description": "Gets or sets the total bids placed.",
          "type": "integer"
        },
        "totalShipments": {
          "format": "int32",
          "description": "Gets or sets the total shipments on the listing.",
          "type": "integer"
        },
        "isAuction": {
          "description": "Gets or sets a value indicating whether this instance is auction.",
          "type": "boolean"
        },
        "isDutchAuction": {
          "description": "Gets or sets a value indicating whether this instance is a Dutch Auction",
          "type": "boolean"
        },
        "isCharitable": {
          "description": "Gets or sets a value indicating whether this instance is charitable.",
          "type": "boolean"
        },
        "autoAcceptPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the auto accept price."
        },
        "namedPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the named price."
        },
        "offerPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the offer price."
        },
        "auctionTargetPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the auction target price."
        },
        "lowestBidPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Gets or sets the lowest bid price."
        },
        "isBrokered": {
          "description": "Gets or sets a value indicating whether this instance is brokered.",
          "type": "boolean"
        },
        "isReadyForPickup": {
          "description": "True if the pickup date is on or before today",
          "type": "boolean"
        },
        "distance": {
          "$ref": "#/definitions/DistanceModel",
          "description": "Gets or sets the distance."
        },
        "isWatched": {
          "description": "Gets or sets a value indicating whether this instance is watched.",
          "type": "boolean"
        },
        "hasCarrierQualifications": {
          "description": "Gets or sets a value indicating whether this instance is subject to Carrier Qualifications.",
          "type": "boolean"
        },
        "privateNetwork": {
          "description": "The private network in which this listing resides",
          "type": "string"
        },
        "dateAccepted": {
          "format": "date-time",
          "description": "Date a bid was accepted on this listing",
          "type": "string"
        },
        "dateCreated": {
          "format": "date-time",
          "description": "Date a listing was created on this listing",
          "type": "string"
        },
        "currentStatus": {
          "description": "Current status of listing",
          "type": "string"
        },
        "bookedPrice": {
          "$ref": "#/definitions/PriceModel",
          "description": "Price of accepted bid"
        },
        "description": {
          "description": "Description of the listing",
          "type": "string"
        },
        "commodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "parentCommodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "topLevelCommodityType": {
          "$ref": "#/definitions/EnumModel"
        },
        "isExclusiveListing": {
          "description": "A flag to indicate whether or not a listing is exclusive to any network",
          "type": "boolean"
        },
        "links": {
          "description": "The resource's links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "PostListingAttachmentModel": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string"
        },
        "attachmentType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "buffer": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ListingAttachmentModel": {
      "required": [
        "links"
      ],
      "type": "object",
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer"
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string"
        },
        "uploaderId": {
          "format": "int64",
          "type": "integer"
        },
        "attachmentType": {
          "$ref": "#/definitions/EnumModel"
        },
        "notes": {
          "type": "string"
        },
        "links": {
          "description": "The resource's links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "PostListingImageModel": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "boolean"
        },
        "fileName": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "buffer": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "AddressModel": {
      "description": "Details of an address and recommended formatting",
      "type": "object",
      "required": [
        "type",
        "country"
      ],
      "properties": {
        "streetAddress": {
          "description": "Primary street address",
          "type": "string"
        },
        "alternateStreetAddress": {
          "description": "Secondary street address",
          "type": "string"
        },
        "majorMunicipality": {
          "description": "The city or minor governing body.MajorMunicipality is required when latitude/longitude or PostalCode are not provided.",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code. PostalCode is required when latitude/longitude or MajorMunicipality/StateProvince are not provided.",
          "type": "string"
        },
        "stateProvince": {
          "description": "State or governing province code. StateProvince is required when latitude/longitude or PostalCode are not provided.",
          "type": "string"
        },
        "stateProvinceLabel": {
          "description": "State or governing province",
          "type": "string"
        },
        "country": {
          "description": "Country code",
          "type": "string"
        },
        "countryLabel": {
          "description": "Country",
          "type": "string"
        },
        "latitude": {
          "format": "double",
          "description": "Geographical latitude. Latitude is required when PostalCode or MajorMunicipality/StateProvince are not provided.",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Geographical longitude. Longitude is required when PostalCode or MajorMunicipality/StateProvince are not provided.",
          "type": "number"
        },
        "label": {
          "description": "Recommended formatting",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EnumModel",
          "description": "Location description"
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "token_type": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "expires_in": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PostListingModel": {
      "required": [
        "namedPrice",
        "title",
        "items"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "free text, ASCII, maximum of 50 characters",
          "type": "string"
        },
        "description": {
          "description": "free text, ASCII; maximum of 5000 characters\r\nmay be empty or absent if none was specified",
          "type": "string"
        },
        "route": {
          "$ref": "#/definitions/PostRouteModel",
          "description": "pickup and dropoff locations and time windows"
        },
        "namedPrice": {
          "$ref": "#/definitions/PriceModel"
        },
        "serviceTypes": {
          "description": "required services for this Shipment's cargo (e.g., blanket wrapping\r\nis required)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "items": {
          "description": "details of the cargo(s) to be transported",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostListingItemModel"
          }
        },
        "accessorials": {
          "description": "accessorials required by the Shipper; e.g., the cargo must not be \r\nallowed to freeze",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumModel"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FormattedAttributeModel"
          }
        },
        "referenceNumbers": {
          "description": "These are identifiers and numbers by which refer to this Shipment \r\nor its cargo in some external system.  If this Shipment is \"owned\"\r\nby an external system, prefer the ThirdParty property, as those\r\nfields are searchable and affect some uShip behavior.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceNumber"
          }
        }
      }
    },
    "PostRouteModel": {
      "description": "Container for route destinations and other route information",
      "type": "object",
      "properties": {
        "items": {
          "description": "Ordered list of route destinations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostRoutePointModel"
          }
        }
      }
    },
    "PostRoutePointModel": {
      "description": "A single destination of a route",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressModel",
          "description": "the address of the pickup/dropoff location"
        },
        "contact": {
          "$ref": "#/definitions/RoutePointContactModel",
          "description": "contract information for the representative(s) responsible for this\r\npickup/dropoff event"
        },
        "timeFrame": {
          "$ref": "#/definitions/PostTimeFrameModel",
          "description": "required arrival time window"
        }
      }
    },
    "PostTimeFrameModel": {
      "description": "The details of a time frame and recommended display",
      "required": [
        "earliestArrival",
        "latestArrival",
        "timeFrameType"
      ],
      "type": "object",
      "properties": {
        "label": {
          "description": "Suggested formatted representation",
          "type": "string"
        },
        "shortLabel": {
          "description": "shortened, localized, human-readable form of the value represented by the \r\nother properties of the class",
          "type": "string"
        },
        "earliestArrival": {
          "format": "date-time",
          "description": "Earliest range for arrival for pickup or dropoff",
          "type": "string"
        },
        "latestArrival": {
          "format": "date-time",
          "description": "Latest range for arrival for pickup or dropoff",
          "type": "string"
        },
        "timeFrameType": {
          "$ref": "#/definitions/EnumModel",
          "description": "{uShip.Enums.ListingTimeFrameType}"
        }
      }
    },
    "PostListingItemModel": {
      "type": "object",
      "required": [
        "title",
        "commodity",
        "widthInMeters",
        "lengthInMeters",
        "heightInMeters"
      ],
      "properties": {
        "title": {
          "description": "free text, ASCII, maximum of 1000 characters",
          "type": "string"
        },
        "description": {
          "description": "free text, ASCII; maximum of 5000 characters\r\nmay be empty or absent if none was specified",
          "type": "string"
        },
        "commodity": {
          "$ref": "#/definitions/EnumModel",
          "description": "the single type of cargo in this item; e.g., appliances"
        },
        "widthInMeters": {
          "format": "double",
          "description": "width in meters",
          "type": "number"
        },
        "lengthInMeters": {
          "format": "double",
          "description": "length in meters",
          "type": "number"
        },
        "heightInMeters": {
          "format": "double",
          "description": "height in meters",
          "type": "number"
        },
        "weightInGrams": {
          "format": "double",
          "description": "weight in grams",
          "type": "number"
        },
        "unitCount": {
          "format": "int32",
          "description": "unit count",
          "type": "integer"
        }
      }
    }
  }
}